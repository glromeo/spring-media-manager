.Card {

  height: 180px; // Cards should? dictate their size but for that to play nicely with the virtualized list I need to
                // implement some sort of offline rendering (possibly of a chunk of rows at a time) so that the order
                // goes: rendering -> measuring -> viewport filling. Maybe I could use an estimated size?

  padding: 10px 10px 0 10px;

  & > * {
    position: relative;
    height: 100%;
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.33);

    display: grid;
    grid-template-columns: 112px auto 60px;
    grid-gap: 0.25em;
  }


  .Title {

    grid-area: title;
    font-size: 1.25rem;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.33);
    min-width: 0;
    display: flex;

    span {
      font-weight: bold;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .Autosuggest {

      width: 100%;
      margin-top: -5px;
      margin-left: -13px;
      padding: 0px;

      .form-control {
        background-color: rgba(255, 255, 255, 0.66);
        border-color: rgba(0, 0, 204, 0.5) !important;
        border-width: 2px !important;
      }

      .query {
        font-weight: bold;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }

  .Unknown {

    .Autosuggest {
      .form-control {
        border-color: rgba(204, 0, 0, 0.5) !important;
        border-width: 2px !important;
      }
    }

    grid-template-rows: 30px 60px 60px;
    grid-template-areas:
            'letter title date'
            'letter path path'
            'letter metadata metadata';

    background-color: rgba(250, 250, 250, .75);

    .Background {
      background-image: url(../images/question-marks-1.jpg);
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      left: 0;
      top: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      border-radius: 10px;
    }

    .Letter {
      grid-area: letter;
      width: 80px;
      height: 80px;
      border-radius: 80px;
      padding: 5px;
      margin: 10px;
      text-align: center;
      font-size: 2.5em;
      color: white;
      box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.5);
      opacity: 0.75;
    }

    .Metadata {
      grid-area: metadata;
    }

    .Path {
      grid-area: path;
      font-weight: bold;
      align-self: center;
      text-shadow: 1px 1px 2px lightgrey;
    }
  }

}

.selected .Card > * {
  background-color: lightgoldenrodyellow !important;
  box-shadow: 1px 1px 3px 3px gold;
}

